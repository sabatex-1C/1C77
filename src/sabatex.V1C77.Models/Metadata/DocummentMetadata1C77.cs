// Copyright (c)  Serhiy Lakas.
// Licensed under the MIT license.
using System;
using System.Collections.Generic;
using System.Text;

namespace sabatex.V1C77.Models.Metadata
{
    public class DocummentMetadata1C77:ObjectMetadata1C77
    {
        /// <summary>
        /// ссылка на журнал, к которому относится данный документ (МетаданныеСсылка)
        /// </summary>
        public string Журнал { get; set; }
        /// <summary>
        ///  вариант установленной периодичности номера (Строка ["Все" / "Год" / "Квартал" / "Месяц" / "День"])
        /// </summary>
        public string ПериодичностьНомера  { get; set; }
        /// <summary>
        /// длина номера документа (Число)
        /// </summary>
        public double ДлинаНомера { get; set; }
        /// <summary>
        /// тип номера в документе (Строка ["Числовой" / "Текстовый"])
        /// </summary>
        public string ТипНомера { get; set; }
        /// <summary>
        /// признак автонумерации документа Число ["1" / "2"]). Единица обозначает отсутствие автонумерации документов, двойка - наличие автонумерации.
        /// </summary>
        public bool АвтоНумерация { get; set; }
        /// <summary>
        /// признак контроля уникальности номеров документов Число ["0" / "1"]). Ноль - нет контроля, единица - контроль включен.
        /// </summary>
        public bool КонтрольУникальности { get; set; }
        /// <summary>
        /// ссылка на используемый в документе нумератор (МетаданныеСсылка)
        /// </summary>
        public string Нумератор { get; set; }
        /// <summary>
        /// признак принадлежности документа к оперативному учету (Число ["0" / "1"]).
        /// </summary>
        public bool ОперативныйУчет { get; set; }
        /// <summary>
        /// признак принадлежности документа к расчету (Число ["0" / "1"])
        /// </summary>
        public bool Расчет { get; set; }
        /// <summary>
        /// признак принадлежности документа к бухгалтерскому учету (Число ["0" / "1"])
        /// </summary>
        public bool БухгалтерскийУчет { get; set; }
        /// <summary>
        /// вариант создания операции в бухгалтерских документах (Строка ["Всегда" / "Выборочно" / "ТолькоПриПроведении"]).
        /// </summary>
        public string СоздаватьОперацию { get; set; }
        /// <summary>
        /// признак автоматической нумерации строк документа (Число ["0" / "1"])
        /// </summary>
        public bool АвтоНумерацияСтрок { get; set; }
        /// <summary>
        /// признак автоматического удаления движений (Число ["0" / "1"])
        /// </summary>
        public bool АвтоудалениеДвижений { get; set; }
        /// <summary>
        /// признак разрешения редактировать операцию документа (Число ["0" / "1"])
        /// </summary>
        public bool РедактированиеОпераций { get; set; }
        /// <summary>
        /// признак разрешения проведения документа (Число ["0" / "1"])
        /// </summary>
        public bool РазрешитьПроведение { get; set; }
        /// <summary>
        /// список документов, вводимых на основании документов данного вида (МетаданныеСсылки).
        /// </summary>
        public IEnumerable<string> ВводимыеНаОснованииДокументы { get; set; }
        /// <summary>
        /// признак принадлежности документа к бухгалтерскому учету (Число ["0" / "1"])
        /// </summary>
        public bool ОснованиеДляЛюбогоДокумента { get; set; }
        /// <summary>
        /// область распространения данных документов этого вида (Строка ["ВсеИнформационныеБазы" / "МестоСоздания" / "МестоСозданияИЦентр"]).
        /// </summary>
        public string ОбластьРаспространения { get; set; }
        /// <summary>
        /// автоматическая регистрация изменений (Число ["0" / "1"])
        /// </summary>
        public bool АвтоРегистрация { get; set; }
        /// <summary>
        /// дополнительные коды баз для компоненты УРБД (Строка)
        /// </summary>
        public string ДополнительныеКодыИБ { get; set; }
        /// <summary>
        /// Для доступа к метаданным, описывающим реквизиты документа используется следующий механизм доступа.
        /// Для получения количества реквизитов шапки документа используется обращение:
        /// Метаданные.Документ(["Идентификатор" / Номер]).РеквизитШапки().
        /// Для обращения к свойствам реквизита используется такая конструкция:
        /// Метаданные.Документ(["Идентификатор" / Номер]).РеквизитШапки(["Идентификатор"/Номер]).
        /// </summary>
        public Dictionary<string,AttributeMetadata1C77> РеквизитШапки { get; set; }
        /// <summary>
        /// Для получения количества реквизитов табличной части документа используется обращение:
        /// Метаданные.Документ(["Идентификатор" / Номер]).РеквизитТабличнойЧасти().
        /// Для обращения к свойствам реквизита табличной части документа используется такая конструкция:
        /// Метаданные.Документ(["Идентификатор" / Номер]).РеквизитТабличнойЧасти(["Идентификатор"/Номер]).
        /// </summary>
        public Dictionary<string,DocumentTableAttributeMetadata1C77> РеквизитТабличнойЧасти { get; set; }

    }
}
